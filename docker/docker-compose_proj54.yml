services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    depends_on:
      - llama3.1-1b
      - qwen3-8b
    networks:
      - my_network
    ports:
      - "6006:6006"
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - xpack.security.enabled=false

  llama3.1-1b:
    build:
      context: .
      dockerfile: Dockerfile.proj54.base
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - no_proxy=host.docker.internal,127.0.0.1,localhost,nginx
    expose:
      - "${LLAMA31_1b_PORT}"
    networks:
      - my_network
    volumes:
      - ${MODEL_DIR}:/app/models
      - ${DATASET_DIR}:/app/datasets
    entrypoint:
      - /bin/bash
      - -c
      - |
        chmod +x ./prepare_model.sh && \
        ./prepare_model.sh ${LLAMA31_1b_MODEL_NAME} ${LLAMA31_1b_PORT} \
        /app/models/${LLAMA31_1b_MODEL_NAME} ${HF_ENDPOINT} \
        ${HUGGING_FACE_HUB_TOKEN} && \
        python3 -u vllm_start/vllm_start_up.py
    deploy:
      resources:
        reservations:
          devices:
            - device_ids: ["${LLAMA31_1b_DEVICE_ID:-0}"]
              capabilities: ["gpu"]
              driver: "nvidia"

  qwen3-8b:
    build:
      context: .
      dockerfile: Dockerfile.proj54.base
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - no_proxy=host.docker.internal,127.0.0.1,localhost,nginx
    expose:
      - "${QWEN3_8B_PORT}"
    networks:
      - my_network
    volumes:
      - ${MODEL_DIR}:/app/models
      - ${DATASET_DIR}:/app/datasets
    entrypoint:
      - /bin/bash
      - -c
      - |
        chmod +x ./prepare_model.sh && \
        ./prepare_model.sh ${QWEN3_8B_MODEL_NAME} ${QWEN3_8B_PORT} \
        /app/models/${QWEN3_8B_MODEL_NAME} ${HF_ENDPOINT} \
        ${HUGGING_FACE_HUB_TOKEN} && \
        python3 -u vllm_start/vllm_start_up.py
    deploy:
      resources:
        reservations:
          devices:
            - device_ids: ["${QWEN3_8B_DEVICE_ID:-1}"]
              capabilities: ["gpu"]
              driver: "nvidia"

networks:
  my_network:
    driver: bridge
